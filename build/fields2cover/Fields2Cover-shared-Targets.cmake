# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Fields2Cover tinyxml2 steering_functions nlohmann_json)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Fields2Cover
add_library(Fields2Cover SHARED IMPORTED)

set_target_properties(Fields2Cover PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_INCLUDE_DIRECTORIES "/home/manel/psolar_ws/src/Fields2Cover/include"
  INTERFACE_LINK_LIBRARIES "/usr/lib/libgdal.so;-lpthread;-lgeos_c"
)

# Create imported target tinyxml2
add_library(tinyxml2 SHARED IMPORTED)

set_target_properties(tinyxml2 PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "\$<\$<CONFIG:Debug>:TINYXML2_DEBUG>;\$<\$<BOOL:ON>:TINYXML2_IMPORT>;_FILE_OFFSET_BITS=64"
  INTERFACE_INCLUDE_DIRECTORIES "/home/manel/psolar_ws/build/fields2cover/_deps/tinyxml2-src"
)

# Create imported target steering_functions
add_library(steering_functions SHARED IMPORTED)

set_target_properties(steering_functions PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_11"
  INTERFACE_INCLUDE_DIRECTORIES "/home/manel/psolar_ws/build/fields2cover/_deps/steering_functions-src/include;/opt/ros/humble/opt/ortools_vendor/include/eigen3"
)

# Create imported target nlohmann_json
add_library(nlohmann_json INTERFACE IMPORTED)

set_target_properties(nlohmann_json PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "JSON_USE_IMPLICIT_CONVERSIONS=\$<BOOL:ON>;JSON_DIAGNOSTICS=\$<BOOL:OFF>"
  INTERFACE_COMPILE_FEATURES "cxx_std_11"
  INTERFACE_INCLUDE_DIRECTORIES "/home/manel/psolar_ws/build/fields2cover/_deps/json-src/single_include/"
)

# Import target "Fields2Cover" for configuration "Release"
set_property(TARGET Fields2Cover APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Fields2Cover PROPERTIES
  IMPORTED_LINK_DEPENDENT_LIBRARIES_RELEASE "tinyxml2;steering_functions"
  IMPORTED_LOCATION_RELEASE "/home/manel/psolar_ws/build/fields2cover/lib/libFields2Cover.so"
  IMPORTED_SONAME_RELEASE "libFields2Cover.so"
  )

# Import target "tinyxml2" for configuration "Release"
set_property(TARGET tinyxml2 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(tinyxml2 PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/manel/psolar_ws/build/fields2cover/_deps/tinyxml2-build/libtinyxml2.so.9.0.0"
  IMPORTED_SONAME_RELEASE "libtinyxml2.so.9"
  )

# Import target "steering_functions" for configuration "Release"
set_property(TARGET steering_functions APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(steering_functions PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/manel/psolar_ws/build/fields2cover/_deps/steering_functions-build/libsteering_functions.so"
  IMPORTED_SONAME_RELEASE "libsteering_functions.so"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
